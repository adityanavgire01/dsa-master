# Even Fibonacci Numbers
#  Problem 2 
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ... 
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

# fib(0) = 0
# fib(1) = 1
# fib(2) = 1
# fib(3) = 2
# fib(4) = 3
# fib(5) = 5

def fib():
    # if n <= 0:
    #     return 0
    # elif n == 1:
    #     return 1
    sum = 0
    count = 0
    a,b = 1,2
    while a<= 4000000:
        if a%2 == 0:
            sum += a
        a, b = b, a+b

    return sum


print(fib())


# simple fib sequence : 

"""

    

def fib_seq(n):
    if n == 0:
        return 0
    
    a, b = 0, 1
    fib_seq = [0]
    for _ in range(n):
        a,b = b, a+b
        fib_seq.append(a)

    return fib_seq

print(fib_seq(int(input("Enter the Fib index : "))))
    

"""